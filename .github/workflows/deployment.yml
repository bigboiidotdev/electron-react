name: Deployment

on:
  release:
    types:
      - created

jobs:
  increment-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Extract tag name prefix
        id: extract-prefix
        run: |
          TAG_NAME=${{ github.event.release.tag_name }}
          TAG_NAME=${TAG_NAME#v}
          echo "prefix=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Update version in package.json & package-lock.json
        run: |
          sed -i "s/\"version\": \".*\"/\"version\": \"${{ steps.extract-prefix.outputs.prefix }}\"/" release/app/package.json
          sed -i "s/\"version\": \".*\"/\"version\": \"${{ steps.extract-prefix.outputs.prefix }}\"/" release/app/package-lock.json

      - name: Upload app-version artifacts
        uses: actions/upload-artifact@v2
        with:
          name: app-version
          path: release/app

  build-win:
    needs: increment-version
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Download release builds
        uses: actions/download-artifact@v2
        with:
          name: app-version
          path: release/app

      - name: Install dependencies
        run: npm i

      - name: Build Electron app
        run: npm run package -- --win
      
      - name: Delete version artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: app-version

      - name: Upload release-build-win artifacts
        uses: actions/upload-artifact@v2
        with:
          name: release-build-win
          path: release/build

  create-release:
    needs: build-win
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download release builds
        uses: actions/download-artifact@v2
        with:
          name: release-build-win
          path: release/build

      - name: Get the latest version from latest.yml
        id: read_yml_version
        run: |
          VERSION=$(yq eval '.version' ./release/build/latest.yml)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Upload release assets
        id: upload_assets
        run: |
          FILE_PATH=$(find ./release/build -name "*Setup*.exe" | head -n 1)
          FILE_NAME="ElectronReact-${{ steps.read_yml_version.outputs.version }}-win.exe"
          curl -L \
            -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary "@$FILE_PATH" \
            "https://uploads.github.com/repos/amirfakhrullah/electron-react/releases/${{ github.event.release.id }}/assets?name=$FILE_NAME"

      - name: Delete release-build-win artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: release-build-win
