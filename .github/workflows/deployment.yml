name: Deployment

on:
  release:
    types:
      - created

jobs:
  increment-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Extract tag name prefix
        id: extract-prefix
        run: |
          TAG_NAME=${{ github.event.release.tag_name }}
          TAG_NAME=${TAG_NAME#v}
          echo "prefix=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Update version in package.json & package-lock.json
        run: |
          sed -i "s/\"version\": \".*\"/\"version\": \"${{ steps.extract-prefix.outputs.prefix }}\"/" release/app/package.json
          sed -i "s/\"version\": \".*\"/\"version\": \"${{ steps.extract-prefix.outputs.prefix }}\"/" release/app/package-lock.json

      - name: Upload app-version artifacts
        uses: actions/upload-artifact@v2
        with:
          name: app-version
          path: release/app

  build-win-and-upload-release:
    needs: increment-version
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Download release builds
        uses: actions/download-artifact@v2
        with:
          name: app-version
          path: release/app

      - name: Install dependencies
        run: npm i

      - name: Build Electron app
        run: npm run package -- --win

      - name: Install curl
        run: choco install curl -y

      - name: Upload release
        run: |
          $FILE_PATH = Get-ChildItem -Path ./release/build -Filter "*Setup*.exe" | Select-Object -First 1
          $FILE_NAME = "ElectronReact-${{ github.event.release.tag_name }}-win.exe"

          curl -L \
            -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary "@$FILE_PATH" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}/assets?name=$FILENAME"

  build-mac-and-upload-release:
    needs: increment-version
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Download release builds
        uses: actions/download-artifact@v2
        with:
          name: app-version
          path: release/app

      - name: Install dependencies
        run: npm i

      - name: Build Electron app
        run: npm run package -- --mac

      - name: Upload release
        run: |
          FILE_PATH=$(find ./release/build -name "*.dmg")

          for FILE in $FILE_PATH; do
            FILENAME=$(basename "$FILE")
            curl -L \
              -X POST \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/octet-stream" \
              --data-binary "@$FILE" \
              "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}/assets?name=$FILENAME"
          done

  cleanups:
    needs: [build-win-and-upload-release, build-mac-and-upload-release]
    runs-on: ubuntu-latest

    steps:
      - name: Delete app-version artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: app-version
